{"version":3,"sources":["assets/icon.png","components/NavBar.js","pages/PostForm.js","pages/Posts.js","hoc/Rainbow.js","pages/Post.js","pages/LoginForm.js","pages/Todos.js","pages/Todo.js","actions/todoActions.js","App.js","reducers/RootReducer.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","Layout","LogoStyle","width","height","background","margin","float","NavBar","react_default","a","createElement","style","position","zIndex","className","menu","theme","mode","defaultSelectedKeys","lineHeight","Item","key","react_router_dom","exact","to","TextArea","Input","CollectionCreateForm","Form","create","name","_React$Component","_class","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","value","_this$props","props","visible","onCancel","onCreate","getFieldDecorator","form","modal","title","okText","onOk","es_form","layout","label","rules","required","message","input","collectionCreateFormLastFormItem","initialValue","es_radio","Group","React","Component","CollectionsPage","state","showModal","_this","setState","handleCancel","handleCreate","formRef","validateFields","err","values","post","body","description","addHandler","resetFields","saveFormRef","es_button","block","type","onClick","wrappedComponentRef","marginBottom","Title","Typography","Posts","call","deleteHandler","id","postList","posts","filter","hasLocals","localLength","length","localStorage","setItem","JSON","stringify","Math","floor","random","userId","concat","toConsumableArray","getPosts","_ref","_ref$id","_ref$userId","_ref$limited","limited","iconLoading","url","axios","get","then","res","data","slice","clearLocalStorage","removeItem","alertVisible","alertMessage","setTimeout","reLoadJSON","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","sent","stop","alertCloseHandler","getItem","locals","parse","_this2","map","card","bordered","src","IconImage","alt","icon","level","textAlign","loading","shape","isInLocalStorage","cursor","size","alert","es_alert","showIcon","closable","afterClose","PostForm","Rainbow","WrappedComponent","colours","styles","backgroundColor","color","padding","Post","match","params","content","NormalLoginForm","handleSubmit","e","preventDefault","console","log","paddingTop","onSubmit","prefix","es_icon","placeholder","autoComplete","valuePropName","es_checkbox","htmlType","marginLeft","marginRight","WrappedNormalLoginForm","Todos","todos","todoList","todo","connect","Todo","clickHandler","deleteTodo","history","push","ownProps","find","parseInt","dispatch","Content","Footer","Home","Topics","activeClassName","react_router","path","component","Topic","render","_ref2","lang","App","components_NavBar","marginTop","LoginForm","href","target","initState","RootReducer","undefined","action","newTodos","objectSpread","Boolean","window","location","hostname","Store","createStore","ReactDOM","es","store","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f04f1ef6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon.25f066e3.png\";","import React from 'react';\nimport { NavLink } from \"react-router-dom\";\n\nimport { Layout, Menu } from 'antd';\nconst { Header } = Layout;\n\nconst NavBar = () => {\n    return ( \n    <Header style={{ position: 'fixed', zIndex: 1, width: '100%' }}>\n        <div className=\"logo\" style={LogoStyle}/>\n        <Menu\n            theme=\"light\"\n            mode=\"horizontal\"\n            defaultSelectedKeys={['home']}\n            style={{ lineHeight: '64px' }}\n        >\n            <Menu.Item key=\"home\">\n                <NavLink exact to=\"/\">Home</NavLink>\n            </Menu.Item>\n            <Menu.Item key=\"posts\">\n                <NavLink to=\"/posts\">Posts</NavLink>\n            </Menu.Item>\n            <Menu.Item key=\"todos\">\n                <NavLink to=\"/todos\">Todos</NavLink>\n            </Menu.Item>\n            <Menu.Item key=\"topics\">\n                <NavLink to=\"/topics\">Topics</NavLink>\n            </Menu.Item>\n            <Menu.Item key=\"login\">\n                <NavLink to=\"/login\">Login</NavLink>\n            </Menu.Item>\n        </Menu>\n    </Header>\n    );\n}\n\nconst LogoStyle = {\n    width: 120,\n    height: 31,\n    background: \"rgba(255, 255, 255, 0.2)\",\n    margin: \"16px 24px 16px 0\",\n    float: \"left\",\n}\nexport default NavBar;\n","import React from 'react';\nimport { Button, Modal, Form, Input, Radio } from 'antd';\nimport '../App.css';\nconst { TextArea } = Input;\n\nconst CollectionCreateForm = Form.create({ name: 'form_in_modal' })(\n  // eslint-disable-next-line\n  class extends React.Component {\n    render() {\n      const { visible, onCancel, onCreate, form } = this.props;\n      const { getFieldDecorator } = form;\n      return (\n        <Modal\n          visible={visible}\n          title=\"Create A New Post\"\n          okText=\"Create\"\n          onCancel={onCancel}\n          onOk={onCreate}\n        >\n          <Form layout=\"vertical\">\n            <Form.Item label=\"Title\">\n              {getFieldDecorator('title', {\n                rules: [{ required: true, message: 'Please input the title of collection!' }],\n              })(<Input />)}\n            </Form.Item>\n\n            <Form.Item label=\"Description\">\n              {getFieldDecorator('description')(<TextArea />)}\n            </Form.Item>\n\n            {/* <Form.Item className=\"collection-create-form_last-form-item\"> */}\n            <Form.Item style={collectionCreateFormLastFormItem}>\n              {getFieldDecorator('modifier', {\n                initialValue: 'public',\n              })(\n                <Radio.Group>\n                  <Radio value=\"public\">Public</Radio>\n                  <Radio value=\"private\">Private</Radio>\n                </Radio.Group>,\n              )}\n            </Form.Item>\n          </Form>\n        </Modal>\n      );\n    }\n  },\n);\n  \nclass CollectionsPage extends React.Component {\n  state = {\n    visible: false,\n  };\n\n  showModal = () => {\n    this.setState({ visible: true });\n  };\n\n  handleCancel = () => {\n    this.setState({ visible: false });\n  };\n\n  handleCreate = () => {\n    const { form } = this.formRef.props;\n    form.validateFields((err, values) => {\n      if (err) {\n        return;\n      }\n      const post = { title: values.title, body: values.description }\n      this.props.addHandler(post);\n      form.resetFields();\n      this.setState({ visible: false });\n    });\n  };\n\n  saveFormRef = formRef => {\n    this.formRef = formRef;\n  };\n\n  render() {\n    return (\n      <div>\n        <Button block type=\"primary\" onClick={this.showModal}>\n          New Post\n        </Button>\n        <CollectionCreateForm\n          wrappedComponentRef={this.saveFormRef}\n          visible={this.state.visible}\n          onCancel={this.handleCancel}\n          onCreate={this.handleCreate}\n        />\n      </div>\n    );\n  }\n}\n\nexport default CollectionsPage;\n\nconst collectionCreateFormLastFormItem = {\n  marginBottom: 0,\n}","import React , { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n// import NewTodoForm from './NewTodoForm';\nimport PostForm from './PostForm';\nimport IconImage from '../assets/icon.png';\nimport { Card, Button, Typography, Alert } from 'antd';\nconst { Title } = Typography;\n\nclass Posts extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            posts: [],\n            hasLocals: false,\n            localLength: 0,\n            iconLoading: false,\n            alertVisible: false,\n            alertMessage: 'alert message.',\n        }\n    }\n\n    deleteHandler = (id) => {\n        const postList = this.state.posts.filter( post => post.id !== id )\n        this.setState({ posts: postList, hasLocals: true, localLength: postList.length })\n        localStorage.setItem(\"posts\", JSON.stringify(postList))\n    }\n\n    addHandler = (post) => {\n        post.id = Math.floor(Math.random() *10)\n        post.userId = post.id\n        const postList = [...this.state.posts, post]\n        this.setState({ posts: postList, hasLocals: true, localLength: postList.length })\n        localStorage.setItem(\"posts\", JSON.stringify(postList))\n    }\n    \n    getPosts = ({id=null, userId=null, limited=10}) => {\n        this.setState({ iconLoading: true })\n        let url = 'https://jsonplaceholder.typicode.com/posts';\n        if(id)\n            url += \"/\"+id;\n        else if(userId)\n            url += \"?userId=\"+ Math.floor(userId);\n        return axios.get(url)\n            .then(res => {\n                return (id)? res.data : res.data.slice(0,limited);\n            })\n    }\n\n    clearLocalStorage = () => {\n        localStorage.removeItem(\"posts\");\n        this.setState({ hasLocals: false, alertVisible: true, alertMessage: 'local post removed.' });\n        setTimeout(() => { \n            this.setState({ localLength: 0, alertVisible: false, alertMessage: 'alert message.' });\n        }, 2000);\n    }\n\n    reLoadJSON = async () => {\n        const userId = Math.floor(Math.random() * 10)\n        const posts = await this.getPosts({userId:userId, limited:7})\n        this.setState({ posts: posts, hasLocals: true, localLength: posts.length, iconLoading: false })\n        localStorage.setItem(\"posts\", JSON.stringify(posts))\n    }\n\n    alertCloseHandler = () => {\n        this.setState({ alertVisible: false, alertMessage: 'alert message.' })\n    }\n\n    /* Start */\n    async componentDidMount(){\n        if ( localStorage.getItem(\"posts\") ){\n            const locals = JSON.parse(localStorage.getItem(\"posts\"))\n            this.setState({ posts: locals, hasLocals: true, localLength: locals.length, })\n        } else {\n            const posts = await this.getPosts({userId:3, limited:3})\n            this.setState({ posts: posts, hasLocals: true, localLength: posts.length, iconLoading: false })\n            localStorage.setItem(\"posts\", JSON.stringify(posts))\n        }\n    }\n\n    render() { \n        const { posts } = this.state;\n        const postList = posts.length ? (\n            posts.map(post => {\n                return (\n                    <Card \n                        title={post.title} \n                        key={post.id} \n                        bordered={false} \n                        style={{margin: \"15px 0px\"}}\n                    >\n                        <div className=\"card-body\">\n                            <div className=\"icon-container\">\n                                <img className=\"icon-image\" src={IconImage} alt=\"icon\" />\n                            </div>\n                            <p>userId: {post.userId}</p>\n                            <p>{post.body}</p>\n                            <Link to={'/posts/'+post.id}>\n                                <Button type=\"primary\">Detail: {post.id}</Button>\n                            </Link>\n                            <Button type=\"danger\" icon=\"close\" onClick={()=> this.deleteHandler(post.id)}>\n                                Delete\n                            </Button>\n                        </div>\n                    </Card>\n                )\n            })\n        ) : (\n            <Card\n                bordered={false} \n                style={{margin: \"15px 0px\"}}\n            >\n                <Title level={4} style={{textAlign:'center'}}>No Posts Yet</Title>\n                <div style={{margin: 10, textAlign:'center'}}>\n                    <Button\n                        loading={this.state.iconLoading}\n                        shape=\"round\"\n                        onClick={()=>{ this.reLoadJSON() }}\n                    >reLoad JSON</Button>\n                </div>                \n            </Card>\n        )\n\n        const isInLocalStorage = (!this.state.hasLocals)? (\n            <p style={{textAlign:'center'}}>No Data Store in localStorage.</p>\n        ) : (\n            <p style={{textAlign:'center', cursor:'pointer'}}>\n                {this.state.localLength} Data Store in localStorage. \n                <Button size=\"small\" style={{margin:'0 4px'}}\n                    shape=\"round\"\n                    onClick={() => { this.clearLocalStorage() }}\n                >Remove it?</Button>\n            </p>\n        );\n\n        const alert = (this.state.alertVisible) ? (\n            <Alert\n                style={{ marginBottom: 10}}\n                message={ this.state.alertMessage }\n                type=\"warning\"\n                showIcon\n                closable\n                afterClose={()=> { this.alertCloseHandler() }}\n            />\n          ) : (<div></div>)\n\n        return ( \n            <div className=\"container\">\n                { alert }\n                { isInLocalStorage }\n                <PostForm addHandler={this.addHandler}/>\n                {postList}\n            </div>\n        );\n    }\n}\n\nexport default Posts;\n\n// const Todos = (props) => {\n//     console.log(props)\n//     // set React Hook\n//     const [todos, setTodos] = useState([\n//         {id: 1, description: \"aaaaaa\", reporter: \"John\" },\n//         {id: 2, description: \"bbbbbb\", reporter: \"Ming\" },\n//         {id: 3, description: \"cccccc\", reporter: \"Ken\" },\n//         {id: 4, description: \"dddddd\", reporter: \"Wing\" },\n//     ]);\n\n//     const deleteHandler = (id) => {\n//         setTodos( todos.filter( todo => todo.id !== id ) )\n//     }\n//     const addHandler = (newTodo) => {\n//         newTodo.id = Math.random()\n//         setTodos( [...todos, newTodo] )\n//     }\n\n//     const todoList = todos.length ? (\n//         todos.map( todo => {\n//             return (\n//                 <Col span={8} key={todo.id}>\n//                     <Card title={todo.reporter} bordered={false} style={{margin: \"10px 0px\",}}>\n//                         <p>{todo.description}</p>\n//                         <p>{todo.reporter}</p>\n//                         <Button block type=\"danger\" icon=\"close\" onClick={()=> deleteHandler(todo.id)}>\n//                             Delete\n//                         </Button>\n//                     </Card>\n//                 </Col>\n//             )\n//         })\n//     ) : (\n//         <Col span={24}>\n//             <Title level={3}>You have No Todo's left.</Title>\n//         </Col>\n//     )\n    \n\n//     return (\n//         <div className=\"container\">\n//             <Title>Todo list</Title>\n//             <Row gutter={16}>\n//                 { todoList }\n//             </Row>\n//             <div className=\"divider\"></div>\n//             <NewTodoForm addHandler={addHandler}/>\n//         </div>\n//     );\n// }\n\n","// Higher Order Component...\nimport React from 'react';\n\nconst Rainbow = (WrappedComponent) => {\n    const colours = ['red', 'pink', 'orange', 'blue', 'green', 'yellow'];\n    const randomColor = colours[Math.floor(Math.random() * (colours.length-1))];\n    const styles = {\n        backgroundColor: randomColor,\n        color: \"#fff\",\n    }\n    return (props) => {\n        return (\n            <div style={styles}>\n                <p style={{padding:4}}>WrappedComponent</p>\n                <WrappedComponent {...props} />\n            </div>\n        )\n    }\n}\n \nexport default Rainbow\n","import React, { Component } from 'react';\nimport axios from 'axios';\n\nclass Post extends Component {\n    state = { \n        id: null,\n        post: null\n    }\n    getPosts (id) {\n        return axios.get('https://jsonplaceholder.typicode.com/posts/'+id)\n            .then(res => {\n                // console.log('getPosts():',res.data)\n                return res.data\n            })\n    }\n\n    async componentDidMount () {\n        let id = this.props.match.params.id;\n        const post = await this.getPosts (id);\n        // console.log(post)\n        this.setState({ id: id, post: post })\n    }\n    \n    render() { \n        let content = ( this.state.post )? (\n            <div>\n                <p>userId: { this.state.post.userId }</p>\n                <h3>{ this.state.post.title }</h3>\n                <p>{ this.state.post.body }</p>\n            </div>\n        ) : (\n            <div>\n                <h3>Loading Post...</h3>\n            </div>\n        )\n        return ( \n            <div className=\"container\">\n                <h1>Post: { this.state.id }</h1>\n                { content }\n            </div>\n        );\n    }\n}\n \nexport default Post;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Form, Icon, Input, Button, Checkbox } from 'antd';\n\nclass NormalLoginForm extends React.Component {\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        console.log('Received values of form: ', values);\n      }\n    });\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    return (\n    <div style={{paddingTop:40, width:300, textAlign:'center', margin: 'auto'}}>\n    <h2>Login</h2>\n      <Form onSubmit={this.handleSubmit} className=\"login-form\">\n        <Form.Item>\n          {getFieldDecorator('username', {\n            rules: [{ required: true, message: 'Please input your username!' }],\n          })(\n            <Input\n              prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n              placeholder=\"Username\"\n              autoComplete=\"false\"\n            />,\n          )}\n        </Form.Item>\n        <Form.Item>\n          {getFieldDecorator('password', {\n            rules: [{ required: true, message: 'Please input your Password!' }],\n          })(\n            <Input\n              prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n              type=\"password\"\n              placeholder=\"Password\"\n              autoComplete=\"false\"\n            />,\n          )}\n        </Form.Item>\n        <Form.Item>\n          {getFieldDecorator('remember', {\n            valuePropName: 'checked',\n            initialValue: true,\n          })(<Checkbox>Remember me</Checkbox>)}\n          {/* <a className=\"login-form-forgot\" href=\"\">\n            Forgot password\n          </a> */}\n          <Link to={'/forgotpassword'} className=\"login-form-forgot\">\n            Forgot password\n          </Link>\n          <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" style={{marginLeft:8, marginRight:8}}>\n            Log in\n          </Button>\n          Or\n          <Link to={'/register'} style={{marginLeft:8, marginRight:8}}>Register now!</Link>\n        {/* <a href=\"\">register now!</a> */}\n        </Form.Item>\n      </Form>\n      </div>\n    );\n  }\n}\n\nconst WrappedNormalLoginForm = Form.create({ name: 'normal_login' })(NormalLoginForm);\n\nexport default WrappedNormalLoginForm;\n\n","import React , { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Card, Button } from 'antd';\n\nclass Todos extends Component {\n\n    deleteHandler = (id) => {\n        const postList = this.state.posts.filter( post => post.id !== id )\n        this.setState({ posts: postList, hasLocals: true, localLength: postList.length })\n        localStorage.setItem(\"posts\", JSON.stringify(postList))\n    }\n\n    render() { \n        console.log(this.props.todos);\n        const { todos } = this.props;\n        const todoList = todos.length? (\n            todos.map( todo => {\n                return (\n                    <Card\n                        bordered={false} \n                        style={{margin: \"15px 0px\"}}\n                        key={todo.id}\n                    >\n                        <div id={todo.id}>\n                            <div>{todo.title}</div>\n                            <div>{todo.body}</div>\n                            <Link to={'/todos/'+todo.id}>\n                                <Button type=\"primary\">Detail: {todo.id}</Button>\n                            </Link>\n                        </div>\n                    </Card>\n\n                )\n            })\n        ) : (\n            <div>No Todos</div>\n        )\n        return ( \n            <div className=\"container\">\n                <h2>Todos(Redux)</h2>\n                { todoList }\n            </div>\n         );\n    }\n}\n\nconst mapStateToProps = ( state ) => {\n    return {\n        todos: state.todos\n    }\n}\n\nexport default connect(mapStateToProps)(Todos);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Card, Button, } from 'antd';\nimport { deleteTodo } from '../actions/todoActions';\n\nclass Todo extends Component {\n    clickHandler = () => {\n        //dispatch...\n        this.props.deleteTodo(this.props.todo.id);\n        this.props.history.push(\"/todos\")\n    }\n\n    render() { \n        const todo = this.props.todo;\n        const content = ( todo )? (\n            <Card\n                bordered={false} \n                style={{margin: \"15px 0px\"}}\n                key={todo.id}\n            >\n                <p>userId: { todo.userId }</p>\n                <h3>{ todo.title }</h3>\n                <p>{ todo.body }</p>\n                <Button \n                    type=\"danger\" \n                    icon=\"close\"\n                    onClick={this.clickHandler}\n                >\n                    Delete\n                </Button>\n            </Card>\n        ) : (\n            <div>\n                <h3>Loading Post...</h3>\n            </div>\n        )\n        return ( \n            <div className=\"container\">\n                <h1>Todo(Redux)</h1>\n                { content }\n            </div>\n        );\n    }\n}\n \nconst mapStateToPorops = ( state, ownProps ) => {\n    let id = ownProps.match.params.id;\n    return {\n        todo: state.todos.find(todo => todo.id === parseInt(id))\n    }\n}\n\nconst mapDispatchToProps = ( dispatch ) => {\n    return {\n        deleteTodo: (id) => { dispatch(deleteTodo(id)) }\n    }\n}\n\nexport default connect(mapStateToPorops, mapDispatchToProps)(Todo);","export const deleteTodo = (id) => {\n    return {\n        type: \"DELETE_TODO\",\n        id\n    }\n}","// learning react router\n// https://reacttraining.com/react-router/web/guides/quick-start\n\n// Nested Routing\nimport React from 'react';\nimport { BrowserRouter as Router, Route, NavLink, Switch } from \"react-router-dom\";\nimport NavBar from './components/NavBar';\nimport Posts from './pages/Posts';\nimport Rainbow from './hoc/Rainbow';\nimport Post from './pages/Post';\nimport LoginForm from './pages/LoginForm';\nimport Todos from './pages/Todos';\nimport Todo from './pages/Todo';\n\nimport { Layout } from 'antd';\nconst { Content, Footer } = Layout;\n\n// RootReducer.dispatch({type: 'ADD_POST', todo: 'buy milk'});\n// RootReducer.dispatch({type: 'ADD_POST', todo: 'sleep more'});\n\nconst Home = (props) => {\n  // console.log(props)\n  return <div className=\"container\"><h2>Home</h2></div>;\n}\n\nconst Topics = ({ match }) => {\n\n  return (\n    <div className=\"container\">\n      <h2>Topics</h2>\n      <ul className=\"nav-bar\">\n        <li>\n          <NavLink to={`${match.url}/components/en`} activeClassName=\"active\">Components</NavLink>\n        </li>\n        <li>\n          <NavLink to={`${match.url}/props-v-state/zht`} activeClassName=\"active\">Props v. State</NavLink>\n        </li>\n      </ul>\n      <Route path={`${match.path}/:id/:lang/`} component={Topic} />\n      <Route\n        exact\n        path={match.path}\n        render={() => <h3>Please select a topic.</h3>}\n      />\n    </div>\n  );\n}\n\nconst Topic = ({ match }) => {\n  console.log(match);\n  return (\n    <div>\n      <h3>Topic</h3>\n      <p>match.url: \"{match.url}\"</p>\n      <p>match.params.id: \"{match.params.id}\"</p>\n      <p>match.params.lang: \"{match.params.lang}\"</p>\n    </div>\n  );\n}\n\nconst App = () => {\n  return (\n    <Router>\n      <Layout className=\"layout\">\n        <NavBar />\n        <Content style={{ padding: '0 50px', marginTop: 64 }}>\n          <Switch>\n            <Route exact path=\"/\" component={Rainbow(Home)} />\n            <Route path=\"/todos/:id\" component={Todo} />\n            <Route path=\"/todos\" component={Todos} />\n            <Route path=\"/posts/:id\" component={Post} />\n            <Route path=\"/posts\" component={Posts} />\n            <Route path=\"/topics\" component={Topics} />\n            <Route path=\"/login\" component={LoginForm} />\n          </Switch>\n        </Content>\n      </Layout>\n      <Footer style={{ textAlign: 'center' }}>\n        <a href=\"https://mac-sin.github.io/my-app/\" target=\"noopener\" style={{color:\"black\",padding:8}}>https://mac-sin.github.io/my-app/</a>\n      </Footer>\n    </Router>\n  );\n}\n\nexport default App;\n","\nconst initState = {\n    todos: [\n        {id:111, userId: 777, title: 'AAAA', body: 'eos qui et ipsum ipsam suscipit aut sed omnis non odio expedita earum mollitia molestiae aut atque rem suscipit nam impedit esse'},\n        {id:222, userId: 888, title: 'AAAA', body: 'veritatis unde neque eligendi quae quod architecto quo neque vitae est illo sit tempora doloremque fugit quod et et vel beatae sequi ullam sed tenetur perspiciatis'},\n        {id:333, userId: 999, title: 'AAAA', body: 'est molestiae facilis quis tempora numquam nihil qui voluptate sapiente consequatur est qui necessitatibus autem aut ipsa aperiam modi dolore numquam reprehenderit eius rem quibusdam'},\n    ],\n}\n\nfunction RootReducer ( state = initState , action ) {\n    if (action.type === \"DELETE_TODO\") {\n        let newTodos = state.todos.filter( todo => {\n            return action.id !== todo.id\n        });\n        return {\n            ...state,\n            todos: newTodos\n        }\n    }\n    return state;\n}\n\nexport default RootReducer;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport RootReducer from './reducers/RootReducer';\nimport * as serviceWorker from './serviceWorker';\n\nconst Store = createStore(RootReducer);\n\nReactDOM.render(<Provider store={Store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}